server {
    listen 443 ssl http2;
    
    ssl_certificate <fullchain.pem>;
    ssl_certificate_key <priv.key>;
    ssl_protocols       TLSv1.3;

    keepalive_timeout  300;
    server_name <IP>;

    location /robots.txt {
        return 200 'User-agent: *\nDisallow: /';
        add_header Content-Type text/plain;
    }

    location / {
        # always allow cors
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Vary' 'Origin' always;
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'vary';

# uncomment to force no-cache        
#        add_header Last-Modified $date_gmt always;
#        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0' always;
#        if_modified_since off;
#        expires off;
#        etag off;
        # error handling
        #try_files $uri $uri/ =404;
        proxy_pass <IP>;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

#    location /websocket {
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "upgrade";

#        proxy_pass <IP>;
#        proxy_set_header Host $http_host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }
}
